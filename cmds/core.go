package cmds

import (
	"errors"
	"os"

	"github.com/spf13/cobra"

	"github.com/hitzhangjie/dlv/pkg/config"
	"github.com/hitzhangjie/dlv/service/debugger"
)

var coreCommand = &cobra.Command{
	Use:   "core <executable> <core>",
	Short: "Examine a core dump.",
	Long: `Examine a core dump (only supports linux and windows core dumps).

The core command will open the specified core file and the associated
executable and let you examine the state of the process when the
core dump was taken.

Currently supports linux/amd64 and linux/arm64 core files, windows/amd64 minidumps and core files generated by Delve's 'dump' command.`,
	PersistentPreRunE: func(cmd *cobra.Command, args []string) error {
		if len(args) != 2 {
			return errors.New("you must provide a core file and an executable")
		}
		return nil
	},
	Run: coreCmdRun,
}

func init() {
	rootCommand.AddCommand(coreCommand)
}

func coreCmdRun(cmd *cobra.Command, args []string) {
	conf, err := config.LoadConfig()
	if err != nil {
		panic(err)
	}

	os.Exit(execute(0, []string{args[0]}, conf, args[1], debugger.ExecutingOther, args, buildFlags))
}
